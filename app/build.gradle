plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "com.google.protobuf" version "0.8.17"
    id 'kotlinx-serialization'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.rulhouse.evgawatcher"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "com.rulhouse.evgawatcher.CustomTestRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.compose.ui:ui:1.3.0-alpha01'
    implementation "androidx.compose.material:material:1.1.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.1.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    implementation 'androidx.activity:activity-compose:1.5.0'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.0'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.5'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    debugImplementation "androidx.compose.ui:ui-tooling:1.1.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Compose dependencies
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0'
    implementation 'androidx.navigation:navigation-compose:2.5.0'
    implementation "androidx.compose.material:material-icons-extended:1.1.1"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation ("com.google.accompanist:accompanist-systemuicontroller:0.24.13-rc")


    // Room
    implementation("androidx.room:room-runtime:$roomVersion")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$roomVersion")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")

    // hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.0'
    implementation 'androidx.activity:activity-ktx:1.5.0'
    // Work Manager
    implementation("androidx.hilt:hilt-work:1.0.0")

    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.24.11-rc'

    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // Jsoup
    implementation 'org.jsoup:jsoup:1.15.1'

    // Glide
    implementation "com.github.skydoves:landscapist-glide:$landscapist_glide_version"

    // Material 3
    implementation 'androidx.compose.material3:material3:1.0.0-alpha14'
    implementation 'androidx.compose.material3:material3-window-size-class:1.0.0-alpha14'

    // Test
    // For instrumented tests.
    androidTestImplementation ('com.google.dagger:hilt-android-testing:2.42')
    androidTestImplementation ('androidx.test.ext:junit:1.1.3')
    androidTestImplementation ('androidx.test.espresso:espresso-core:3.4.0')
    androidTestImplementation ("androidx.compose.ui:ui-test-junit4:1.1.1")
    androidTestImplementation ('androidx.work:work-testing:2.7.1')
    androidTestImplementation ('androidx.test:runner:1.4.0')
    androidTestImplementation ('androidx.test:rules:1.4.0')
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.42")

    testImplementation('com.google.dagger:hilt-android-testing:2.42')
    testImplementation 'junit:junit:4.13.2'
    testImplementation ('androidx.work:work-testing:2.7.1')
    testImplementation ('androidx.test:runner:1.4.0')
    testImplementation ('androidx.test:rules:1.4.0')
    kaptTest("com.google.dagger:hilt-android-compiler:2.42")

    // Data Store -- Proto Buf
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.18.0"
    implementation "androidx.datastore:datastore:1.0.0"

    // Serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3")

    // Junit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Splash Screen
    implementation "androidx.core:core-splashscreen:1.0.0-rc01"
}

protobuf {
    protoc {
        if (osdetector.os == "osx") {
            artifact = 'com.google.protobuf:protoc:3.14.0:osx-x86_64'
        } else {
            artifact = 'com.google.protobuf:protoc:3.14.0'
        }
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

//指定原始.proto文件的位置
android {
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
            }
            proto {
                srcDirs 'src/main/proto'
            }
        }
    }
}